# This file provides preconfigured containers to run tests
# in a development environment
#
# How to use this:
# docker-compose -f dev.helper.yml run (django-test|eslint-fix|eslint|jest) 
#
# You can also run a command in the container by using:
# docker-compose -f dev.helper.yml run <service-name> <command>

version: '3.4'

services:
  python-tests:
    build: ../
    user: root
    volumes:
      - ../myuw:/app/myuw
      - /tmp/myuw:/coverage
    environment:
      ENV: localdev
      AUTH: SAML_MOCK
      DJANGO_APP: "myuw"
      MEMCACHED_SERVER_COUNT: 1
      MEMCACHED_SERVER_SPEC: memcached
    depends_on:
      - memcached
    stdin_open: true
    tty: true
    command: bash -c ". ./docker/test_python.sh"
  memcached:
    image: memcached
  eslint:
    build:
      context: ../
      target: node-test-container
    environment:
      NODE_ENV: producation
      ENV: localdev
    volumes:
      - ../myuw:/app/myuw
    working_dir: /app/
    stdin_open: true
    tty: true
    entrypoint:
      - ./node_modules/.bin/eslint
      - myuw/static/vue
      - --ext
      - .vue
  jest-cypress:
    image: cypress/browsers:node14.16.0-chrome90-ff88
    environment:
      NODE_ENV: producation
      ENV: localdev
    volumes:
      - ../myuw:/app/myuw
      - ../cypress:/app/cypress
      - ../.babelrc:/app/.babelrc
      - ../package.json:/app/package.json
      - ../webpack.config.js:/app/webpack.config.js
      - ../webpack.cypress.config.js:/app/webpack.cypress.config.js
      - ../cypress.json:/app/cypress.json
    stdin_open: true
    tty: true
    working_dir: /app/
    entrypoint:
      - bash
  e2e-myuw:
    build:
      context: ../
      target: app-container
    environment:
      AUTH: SAML_MOCK